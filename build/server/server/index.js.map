{"version":3,"sources":["../../../src/server/index.js"],"names":["bodyParser","express","http","log","appRenderer","getAvailablePort","process","on","ex","error","exit","app","server","createServer","port","enable","use","json","urlencoded","extended","static","maxAge","listen","info"],"mappings":"AAAA;AACA,OAAO,gBAAP;AACA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP;AACA,OAAOC,WAAP;AACA,SAASC,gBAAT;;AAGAC,QAAQC,EAAR,CAAW,mBAAX,EAAgC,UAACC,EAAD,EAAQ;AACtCL,MAAIM,KAAJ,CAAUD,EAAV;AACAF,UAAQI,IAAR,CAAa,CAAb;AACD,CAHD;;AAKA,IAAMC,MAAMV,SAAZ;AACA,IAAMW,SAASV,KAAKW,YAAL,CAAkBF,GAAlB,CAAf;AACA;AACA,IAAMG,OAAO,sBAAb;;AAEA;AACAH,IAAII,MAAJ,CAAW,aAAX;;AAEA;AACAJ,IAAIK,GAAJ,CAAQhB,WAAWiB,IAAX,EAAR;AACAN,IAAIK,GAAJ,CAAQhB,WAAWkB,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEA;AACA,IAAI,iBAAyB,YAA7B,EAA2C;AACzCR,MAAIK,GAAJ,CAAQf,QAAQmB,MAAR,iBAAuC;AAC7CC,YAAQ;AADqC,GAAvC,CAAR;AAGD;;AAEDV,IAAIK,GAAJ,CAAQZ,WAAR;AACAQ,OAAOU,MAAP,CAAcR,IAAd,EAAoB,YAAM;AACxBX,MAAIoB,IAAJ,kCAAwCT,IAAxC;AACD,CAFD;;AAIA,SACEH,GADF,EAEEC,MAFF","file":"index.js","sourcesContent":["// import 'ignore-styles'\nimport 'babel-polyfill'\nimport bodyParser from 'body-parser'\nimport express from 'express'\nimport http from 'http'\nimport log from '../log'\nimport appRenderer from './middleware/app-renderer'\nimport { getAvailablePort } from 'utils'\n\n\nprocess.on('uncaughtException', (ex) => {\n  log.error(ex)\n  process.exit(1)\n})\n\nconst app = express()\nconst server = http.createServer(app)\n// Heroku requires you to use process.env.PORT\nconst port = process.env.DEV_APP_PORT || process.env.PORT\n\n// Don't rate limit heroku\napp.enable('trust proxy')\n\n// Parse bodies as JSON\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\n\n// In development, we use webpack server\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static(process.env.PUBLIC_DIR, {\n    maxAge: '180 days'\n  }))\n}\n\napp.use(appRenderer)\nserver.listen(port, () => {\n  log.info(`Node app is running on port ${port}`)\n})\n\nexport {\n  app,\n  server,\n}"]}