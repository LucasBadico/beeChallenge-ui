{"version":3,"sources":["../../../src/utils/getAvailablePort.js"],"names":["createServer","getAvailablePort","startingAt","getNextAvailablePort","currentPort","fn","server","listen","once","close","on","Promise","resolve"],"mappings":";;;;AAAA,SAASA,YAAT,QAA6B,MAA7B;;AAEA,OAAO,IAAMC;AAAA,uEAAmB,iBAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,4CADsB,GACC,SAAvBA,oBAAuB,CAACC,WAAD,EAAcC,EAAd,EAAqB;AAC9C,gCAAMC,SAASN,cAAf;AACAM,mCAAOC,MAAP,CAAcH,WAAd,EAA2B,aAAK;AAC5BE,uCAAOE,IAAP,CAAY,OAAZ,EAAqB,aAAK;AACtBH,uCAAGD,WAAH;AACH,iCAFD;AAGAE,uCAAOG,KAAP;AACH,6BALD;AAMAH,mCAAOI,EAAP,CAAU,OAAV,EAAmB,aAAK;AACpBP,qDAAqB,EAAEC,WAAvB,EAAoCC,EAApC;AACH,6BAFD;AAGH,yBAZ2B;;AAAA,yDAcrB,IAAIM,OAAJ,CAAY,mBAAW;AAC1BR,iDAAqBD,UAArB,EAAiCU,OAAjC;AACH,yBAFM,CAdqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"getAvailablePort.js","sourcesContent":["import { createServer } from 'http'\n\nexport const getAvailablePort = async startingAt => {\n    const getNextAvailablePort = (currentPort, fn) => {\n        const server = createServer()\n        server.listen(currentPort, _ => {\n            server.once('close', _ => {\n                fn(currentPort)\n            })\n            server.close()\n        })\n        server.on('error', _ => {\n            getNextAvailablePort(++currentPort, fn)\n        })\n    }\n\n    return new Promise(resolve => {\n        getNextAvailablePort(startingAt, resolve)\n    })\n}"]}