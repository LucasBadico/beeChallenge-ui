{"version":3,"sources":["../../../src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","createEpicMiddleware","combineEpics","routerReducer","routerMiddleware","log","reducers","openLeadOnNotFinded","buttlerWillOpenForm","buttlerWillCloseForm","buttlerShowTable","fetchService","rootEpic","epicMiddleware","createReducer","initialState","actionHandlers","reducer","state","action","hasOwnProperty","type","Store","history","data","routing"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,oBAAT,EAA+BC,YAA/B,QAAmD,kBAAnD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AACA,OAAOC,GAAP;AACA,OAAO,KAAKC,QAAZ;;AAEA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,oBAHF,EAIEC,gBAJF,EAKEC,YALF;;AAQA,IAAMC,WAAWV,aACfK,mBADe,EAEfC,mBAFe,EAGfC,oBAHe,EAIfE;AACA;AALe,CAAjB;;AAQA,IAAME,iBAAiBZ,qBAAqBW,QAArB,CAAvB;;AAEA,OAAO,SAASE,aAAT,CAAuBC,YAAvB,EAAqCC,cAArC,EAAqD;AAC1D,SAAO,SAASC,OAAT,GAA+C;AAAA,QAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,QAARI,MAAQ;;AACpD,QAAIH,eAAeI,cAAf,CAA8BD,OAAOE,IAArC,CAAJ,EAAgD;AAC9C,aAAOL,eAAeG,OAAOE,IAAtB,EAA4BH,KAA5B,EAAmCC,MAAnC,CAAP;AACD,KAFD,MAEO;AACL,aAAOD,KAAP;AACD;AACF,GAND;AAOD;;AAED;;IAEqBI,K,GACnB,eAAYC,OAAZ,EAAwC;AAAA,MAAnBR,YAAmB,uEAAJ,EAAI;;AAAA;;AACtC,OAAKS,IAAL,GAAY3B,YACVC,6BACKQ,QADL;AAEEmB,aAAStB;AAFX,KADU,EAKVY,YALU;AAMV;AACEhB,kBACEc,cADF,EAEET,iBAAiBmB,OAAjB,CAFF;AAIF;AAXU,GAAZ;AAaH,C;;eAfoBD,K","file":"index.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport { createEpicMiddleware, combineEpics } from 'redux-observable'\nimport { routerReducer, routerMiddleware } from 'react-router-redux'\nimport log from 'log'\nimport * as reducers from './reducers'\n\nimport {\n  openLeadOnNotFinded,\n  buttlerWillOpenForm,\n  buttlerWillCloseForm,\n  buttlerShowTable,\n  fetchService,\n} from './epics'\n\nconst rootEpic = combineEpics(\n  openLeadOnNotFinded,\n  buttlerWillOpenForm,\n  buttlerWillCloseForm,\n  fetchService,\n  // buttlerShowTable,\n)\n\nconst epicMiddleware = createEpicMiddleware(rootEpic)\n\nexport function createReducer(initialState, actionHandlers) {\n  return function reducer(state = initialState, action) {\n    if (actionHandlers.hasOwnProperty(action.type)) {\n      return actionHandlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n\n// const composeEnhancers = window ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : compose;\n\nexport default class Store {\n  constructor(history, initialState = {}) {\n    this.data = createStore(\n      combineReducers({\n        ...reducers,\n        routing: routerReducer,\n      }),\n      initialState,\n      // composeEnhancers(\n        applyMiddleware(\n          epicMiddleware,\n          routerMiddleware(history),\n        ),\n      // )\n    )\n}\n}\n"]}