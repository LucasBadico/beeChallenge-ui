{"version":3,"sources":["../../../../src/store/epics/buttler.js"],"names":["WILL_OPEN_FORM","OPEN_FORM","WILL_CLOSE_FORM","CLOSE_FORM","log","race","timer","reduce","merge","delay","mapTo","buttlerWillOpenForm","action$","store","ofType","map","formToOpen","action","form","type","buttlerWillCloseForm","formToClose","buttlerShowTable"],"mappings":"AAAA,OAAO,MAAP;;AAEA,SACIA,cADJ,EAEIC,SAFJ,EAGIC,eAHJ,EAIIC,UAJJ;;AAOA,OAAOC,GAAP;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAGA,OAAO,IAAMC,sBAAsB,SAAtBA,mBAAsB,CAACC,OAAD,EAAUC,KAAV;AAAA,WAAoBD,QAAQE,MAAR,CAAed,cAAf,EACnDe,GADmD,CAC/C,kBAAU;AACX;AACA,YAAMC,aAAaC,OAAOC,IAA1B;AACA,eAAQ,EAAEC,MAAMlB,SAAR,EAAmBiB,MAAMF,UAAzB,EAAR;AACF,KALkD,CAApB;AAAA,CAA5B;;AAOP,OAAO,IAAMI,uBAAuB,SAAvBA,oBAAuB,CAACR,OAAD,EAAUC,KAAV;AAAA,WAAoBD,QAAQE,MAAR,CAAeZ,eAAf,EACpDa,GADoD,CAChD,kBAAU;AACX;AACA,YAAMM,cAAcJ,OAAOC,IAA3B;AACA,eAAQ,EAAEC,MAAMhB,UAAR,EAAoBe,MAAMG,WAA1B,EAAR;AACF,KALmD,CAApB;AAAA,CAA7B;;AAOP,OAAO,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACV,OAAD,EAAUC,KAAV;AAAA,WAAoBD,QAAQE,MAAR,CAAeZ,eAAf,EACnDa,GADmD,CAC/C,kBAAU;AACX;AACA,YAAMM,cAAcJ,OAAOC,IAA3B;AACA,eAAQ,EAAEC,MAAMlB,SAAR,EAAmBiB,MAAMG,WAAzB,EAAR;AACF,KALkD,CAApB;AAAA,CAAzB;;AAOP","file":"buttler.js","sourcesContent":["import 'rxjs'\nimport * as R from 'ramda'\nimport {\n    WILL_OPEN_FORM,\n    OPEN_FORM,\n    WILL_CLOSE_FORM,\n    CLOSE_FORM,\n} from 'store/actions'\n\nimport log from 'log'\nimport { race } from 'rxjs/observable/race'\nimport { timer } from 'rxjs/observable/timer'\nimport { reduce } from 'rxjs/operator/reduce'\nimport { merge } from 'rxjs/operator/merge'\nimport { delay } from 'rxjs/operator/delay'\nimport { mapTo } from 'rxjs/operators'\n\n\nexport const buttlerWillOpenForm = (action$, store) => action$.ofType(WILL_OPEN_FORM)\n   .map(action => {\n       // put here some logic before open form\n       const formToOpen = action.form\n       return ({ type: OPEN_FORM, form: formToOpen })\n    })\n\nexport const buttlerWillCloseForm = (action$, store) => action$.ofType(WILL_CLOSE_FORM)\n   .map(action => {\n       // put here some logic before closing form\n       const formToClose = action.form\n       return ({ type: CLOSE_FORM, form: formToClose })\n    })\n\nexport const buttlerShowTable = (action$, store) => action$.ofType(WILL_CLOSE_FORM)\n.map(action => {\n    // put here some logic before closing form\n    const formToClose = action.form\n    return ({ type: OPEN_FORM, form: formToClose })\n })\n\n/*\n.mergeMap(action =>\n        race(\n        timer(2000).mapTo({ type: OPEN_N_M }),\n        action$.ofType(EPT_CANCEL_OPEN_N_M)\n            .take(1),\n       ),\n*/"]}